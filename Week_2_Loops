// Week 2 - Loops

// In the following exercises, you will need to place your code or answer underneath each
// exercise prompt.

// First try answering these without using references or looking up any information.
// Then, check your answer by using references and/or running your code.
// You can run your JS code using the Chrome or Firefox Developer tools, or by using Node.js.
// Feel free to update your answers if you got them wrong at first -- this exercise is for your own learning.
// But make sure you understand why the correct answer is right.

// Exercise 1. Write a 'while' loop that prints the integers (whole numbers)
// between 1 and 5 (inclusive).

let loopHolder = {
    loopOne : [],
    loopTwo : [],
    loopThree :[],
    loopFour :[],
    loopFive : [],
    loopSix : [],
    loopSeven : [],
    loopEight : [],
    loopNine : [],
    loopTen : [],
    loopEleven : []
};
let a = 1;

while (a < 6){
    loopHolder.loopOne.push(a);
    a++
}
console.log(loopHolder.loopOne);

// Exercise 2. Write a 'do while' loop that prints the integers (whole numbers)
// between 1 and 5 (inclusive).

let bees = 1;

do{
    loopHolder.loopTwo.push(bees);
    bees++;
} while (bees < 6);

console.log(loopHolder.loopTwo);

// Exercise 3. Write a 'for' loop that prints the integers (whole numbers)
// between 1 and 5 (inclusive).

for (let callas = 1; callas < 6; callas++){
    loopHolder.loopThree.push(callas);
}

console.log(loopHolder.loopThree);

// Exercise 4. Now we want a loop that prints the integers
// counting DOWN from 10 to 1 (inclusive). Write three loops that do this, to practice
// writing loops in all 3 ways -- as a 'while', 'do while', and 'for' loop.



let ants = 10;

         /*while (ants > 0){
         loopHolder.loopFour.push(ants);
          ants--;
        }
        */

        /*do {
            loopHolder.loopFour.push(ants);
            a--
        } while (ants > 0);
        */
        

        for (ants = 0; ants < 11;ants++){
            loopHolder.loopFour.push(ants);

        }
        

console.log(loopHolder.loopFour);

// Exercise 5. Write a loop that prints the integers from 7 to 27. Write this
// loop in all 3 ways -- as a 'while', 'do while', and 'for' loop.

let seven = 7;

         /*while(seven < 28){
            loopHolder.loopFive.push(seven);
            seven++;
        }
        */

         /*for(seven = 27; seven >= 7; seven--){
            loopHolder.loopFive.push(seven);
        }
        */

         do{
            loopHolder.loopFive.push(seven);
            seven++;
        } while(seven < 28);
        

console.log(loopHolder.loopFive);

// Exercise 6. Write a loop that prints numbers between 0 and 100, counting by tens.
// I.e. it will print 10, then 20, then 30, etc.
// Write this loop in all 3 ways -- as a 'while', 'do while', and 'for' loop.

let leaves = 10;

        while(leaves <= 100){
            loopHolder.loopSix.push(leaves);
            leaves+=10;
        }
        

        /* do{
            loopHolder.loopSix.push(leaves);
            leaves+=10;
        } while(leaves < 110);
        */

         /* for(leaves = 0; leaves < 110; leaves+=10){
            loopHolder.loopSix.push(leaves);
        }
        */


console.log(loopHolder.loopSix);

// Exercise 7. Add a comment as to why the following loop is an infinite loop (will
// run without ever stopping). Then fix the loop so that it stops when
// counterFour is equal to -100.

/*let counterFour = 1;
while (counterFour > -101) {
  console.log("HELP ME!");
  counterFour--;
}*/

        /*The conditional statement will always be true and the decrement operator 
        in the code block will cause the function to keep running because the value 
        for counterFour will never be greater than 2. A false boolean value while
        evaluating the conditional statement would tell the loop to stop running.*/

// Exercise 8. Make a variable that contains your favorite integer. Write a loop
// (your choice which type) that prints the integers from 0 to that number.

let minutesInANonLeapYear = 525600;
let faveInteger = 42;
for(c = 0; c <= faveInteger; c++){
    loopHolder.loopEight.push(c);
}

console.log(loopHolder.loopEight);

// Exercise 9. Make a variable that contains your favorite integer (this time make sure it's
// less than 100). Write a loop (your choice which type) that prints the integers from 0 to 100.
// Next to each number it should print "not my favorite number". But next to your favorite
// number it should print "my favorite number!". Example output (if your favorite number was 2):
// 0 not my favorite number
// 1 not my favorite number
// 2 my favorite number!
// 3 not my favorite number
// ...
// (Hint - use an if statement in your loop)

let favNum = 76;
function pebblePile(pebbles){
    for(pebbles = 0; pebbles <= favNum; pebbles++){
        loopHolder.loopNine.push(pebbles);
        if(pebbles < favNum){
            console.log(pebbles + " is not my favorite number.");
        } else{
            console.log(pebbles + " is my favorite number!");
        }
    }
    
};

pebblePile();


// Exercise 10. In some of the exercises above, we had you write all 3 types of loops, for practice.
// But in real life, how would you decide which type of loop to use? You might not have an
// exact answer, but spend a few minutes thinking about the different types of loops and/or
// doing some research and write down your thoughts in a comment below:

/*"For" and "while" loops are pretty interchangeable. The most significant difference is that in
a "for" loop you declare an initializing argument and a condition that ends the loop, and
a "while" loop only needs a condition to end the loop before you write the code you want to run.
If I had to debug someone else's code, I would use the same loops the author used unless asked to
do otherwise. I read "for" loops look neater, but a "do-while" loop may be more useful to future
collaborators since the code block is the first part of the loop someone would read. If a "do-while"
loop were used in a function that produced an output to be used in another function later, it
would present the area of the loop where changes might be needed for future debugging.*/



// Exercise 11. Now we'll practice using nested loops (a loop inside another loop)!
// Update the nested loops below to so that for each value of outsideCounter,
// the inside loop will show a countdown

/*
counting down from 0
*********************************** 
counting down from 1
inside 1
*********************************** 
counting down from 2
inside 2
inside 1
*********************************** 
counting down from 3
inside 3
inside 2
inside 1
*********************************** 
*/

for (let outsideCounter = 0; outsideCounter <= 3; outsideCounter++) {
  console.log("counting down from", outsideCounter);
  for (let insideCounter = outsideCounter; insideCounter >= 0; insideCounter--) {
    console.log("inside",insideCounter);
  }
  console.log("***********************************");
}
// Congrats, you made it to the end!
// Did you find this easy or hard? If you used references, which ones helped you?
// Please answer in a comment below.

/*  After getting more practice with the syntax for different kinds of loops,
    I feel more confident in my ability to read and use different code. I'm 
    excited to learn more about when to use specific loops!

// Email your file to us or commit your file to GitHub and email us a link.